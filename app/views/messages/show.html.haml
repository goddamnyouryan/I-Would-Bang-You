- content_for(:head) do
	:javascript
		$(document).ready(function(){
			var scrollElem = scrollableElement('html', 'body');
			var $target = $("ul#responses li:last"), target = "ul#responses li:last";
			if ($target) {
				var targetOffset = $target.offset().top - 200;
				$(scrollElem).animate({scrollTop: targetOffset}, 800, function() {
				});
			}
			
			$("#new_response").validate({
				rules: {
					"response[content]": {
						required: true,
						minlength: 1
					}
				},
				messages: {
					"response[content]": {
						required: "You need to type something!",
						minlength: "You have to select at least one!"
					}
				},
				errorPlacement: function(error, element) {
					error.insertAfter("#respond h2");
				}
			});
		});
		
		function scrollableElement(els) {
		    for (var i = 0, argLength = arguments.length; i <argLength; i++) {
		      var el = arguments[i],
		          $scrollElement = $(el);
		      if ($scrollElement.scrollTop()> 0) {
		        return el;
		      } else {
		        $scrollElement.scrollTop(1);
		        var isScrollable = $scrollElement.scrollTop()> 0;
		        $scrollElement.scrollTop(0);
		        if (isScrollable) {
		          return el;
		        }
		      }
		    }
		    return [];
		  }

-title "Message from #{@person.login}"

%h2.message= "Message from #{@person.login}"

%h3.message= @message.responses.first.content

%ul#responses
	= render @responses

#respond
	%h2{ :style => "margin:50px 0 0;"}= "Write a message to #{@person.login}..."
	-form_for [@message, @response], :remote => true do |f|
		= image_tag current_user.profile_photo, :class => "fl"
		%p= f.text_area :content, :placeholder => "Type your message here.  You better make it charming as hell..."
		%p= f.submit "Send", :disable_with => "Sending...", :class => "black-button fr"